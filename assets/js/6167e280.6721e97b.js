"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8310],{63049:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>h,contentTitle:()=>u,default:()=>g,frontMatter:()=>c,metadata:()=>y,toc:()=>f});var r=a(87462),i=(a(67294),a(3905)),n=a(26389),o=a(94891),s=a(75190),l=a(47507),m=a(24310),p=a(63303),d=(a(75035),a(85162));const c={id:"submit-order-payment",title:"Submit Order Payment",description:"Submits payment for a pending order to Bonsai for processing. Orders will be processed once payment is confirmed",sidebar_label:"Submit Order Payment",hide_title:!0,hide_table_of_contents:!0,api:{tags:["Orders"],parameters:[{in:"path",name:"id",required:!0,description:"Public ID of the order.",example:"cldbvy7gt0006hpzo9nyw72ks",schema:{type:"string"}}],requestBody:{content:{"application/json":{schema:{type:"object",required:["method","token"],properties:{method:{type:"string",enum:["credit card","external payment","stripe"],description:"Payment method used to pay for the order.",example:"credit card"},token:{type:"string",description:"Payment token for the order. Each payment token may be used for 1 order.",example:"tok_us"},currency:{type:"string",enum:["CAD","USD","GBP","AUD","EUR"],description:"ISO currency code for the currency that customer payment was taken in.",example:"USD"},amounts:{type:"object",required:["shipping","taxes","goods"],properties:{shipping:{type:"number",format:"float",description:"Total amount of shipping costs, in target currency (ex. USD).;"},taxes:{type:"number",format:"float",description:"The amount of taxes to be paid, in target currency (ex. USD)."},goods:{type:"number",format:"float",description:"The amount of goods to be paid, in target currency (ex. USD)."}},description:"Amounts for the order. Required only for `external payment` method."}},description:"Payment information for an order"}}},required:!0},responses:{400:{description:"400 - Bad request",content:{"application/json":{schema:{type:"object",properties:{errors:{type:"array",items:{type:"object",required:["status","detail","title"],properties:{status:{type:"number",format:"float",example:500},detail:{type:"string",nullable:!0,example:"Fatal issue"},title:{type:"string",example:"Unknown error"}},example:{status:400,detail:"",title:"Bad input request"}}}},description:"Provided input is invalid"}}}},401:{description:"401 - Unauthorized",content:{"application/json":{schema:{type:"object",properties:{errors:{type:"array",items:{type:"object",required:["status","detail","title"],properties:{status:{type:"number",format:"float",example:500},detail:{type:"string",nullable:!0,example:"Fatal issue"},title:{type:"string",example:"Unknown error"}},example:{status:401,detail:"",title:"Authentication information is missing or invalid"}}}},description:"Authentication information is missing or invalid"}}}},404:{description:"404 - Not found",content:{"application/json":{schema:{type:"object",properties:{errors:{type:"array",items:{type:"object",required:["status","detail","title"],properties:{status:{type:"number",format:"float",example:500},detail:{type:"string",nullable:!0,example:"Fatal issue"},title:{type:"string",example:"Unknown error"}},example:{status:404,detail:"",title:"Not Found"}}}},description:"Not Found"}}}},"5XX":{description:"500 - Unknown error",content:{"application/json":{schema:{type:"object",properties:{errors:{type:"array",items:{type:"object",required:["status","detail","title"],properties:{status:{type:"number",format:"float",example:500},detail:{type:"string",nullable:!0,example:"Fatal issue"},title:{type:"string",example:"Unknown error"}},example:{status:500,detail:"",title:"Unknown error"}}}},description:"Unknown error"}}}}},description:"Submits payment for a pending order to Bonsai for processing. Orders will be processed once payment is confirmed",method:"post",path:"/v2/{id}/payment",servers:[{url:"https://api.shopbonsai.ca/orders"}],security:[{APIKeyHeader:[]}],securitySchemes:{APIKeyHeader:{type:"apiKey",name:"API-Key",in:"header"},AuthorizationHeader:{type:"apiKey",name:"Authorization",in:"header"}},jsonRequestBodyExample:{method:"credit card",token:"tok_us",currency:"USD",amounts:{shipping:0,taxes:0,goods:0}},info:{title:"Orders API",description:"\n  APIs used for interacting with orders.\n\n  There are a few types of integration with the Bonsai Order API depending on who owns the payments.\n\n  ## Bonsai owns the payment\n\n  ### Native Checkout experience\n\n  If during the checkout process, the customer is redirected to Bonsai's checkout page to complete payment and order processing.\n\n  ### API integrated checkout experience\n\n  If you are hosting your own checkout experience and leveraging our endpoints to collect payment and complete order processing.\n  Please contact our team to provide you with all you need to get started.\n\n  ## Account owns the payment\n\n  If you are owning payment. Orders will need to be submitted with the payment method `external payment`.\n  Once the order is submitted, our team will handle fulfillment and Bonsai will invoice you for the order amount based on our agreement.\n  ",version:"7.9.1",contact:{email:"developers@shopbonsai.ca"}},postman:{name:"Submit Order Payment",description:{content:"Submits payment for a pending order to Bonsai for processing. Orders will be processed once payment is confirmed",type:"text/plain"},url:{path:["v2",":id","payment"],host:["{{baseUrl}}"],query:[],variable:[{disabled:!1,description:{content:"(Required) Public ID of the order.",type:"text/plain"},type:"any",value:"",key:"id"}]},header:[{key:"Content-Type",value:"application/json"},{key:"Accept",value:"application/json"}],method:"POST",body:{mode:"raw",raw:'""',options:{raw:{language:"json"}}}}},sidebar_class_name:"post api-method",info_path:"docs/api/orders/orders-api"},u=void 0,y={unversionedId:"api/orders/submit-order-payment",id:"api/orders/submit-order-payment",title:"Submit Order Payment",description:"Submits payment for a pending order to Bonsai for processing. Orders will be processed once payment is confirmed",source:"@site/docs/api/orders/submit-order-payment.api.mdx",sourceDirName:"api/orders",slug:"/api/orders/submit-order-payment",permalink:"/docs/api/orders/submit-order-payment",draft:!1,tags:[],version:"current",frontMatter:{id:"submit-order-payment",title:"Submit Order Payment",description:"Submits payment for a pending order to Bonsai for processing. Orders will be processed once payment is confirmed",sidebar_label:"Submit Order Payment",hide_title:!0,hide_table_of_contents:!0,api:{tags:["Orders"],parameters:[{in:"path",name:"id",required:!0,description:"Public ID of the order.",example:"cldbvy7gt0006hpzo9nyw72ks",schema:{type:"string"}}],requestBody:{content:{"application/json":{schema:{type:"object",required:["method","token"],properties:{method:{type:"string",enum:["credit card","external payment","stripe"],description:"Payment method used to pay for the order.",example:"credit card"},token:{type:"string",description:"Payment token for the order. Each payment token may be used for 1 order.",example:"tok_us"},currency:{type:"string",enum:["CAD","USD","GBP","AUD","EUR"],description:"ISO currency code for the currency that customer payment was taken in.",example:"USD"},amounts:{type:"object",required:["shipping","taxes","goods"],properties:{shipping:{type:"number",format:"float",description:"Total amount of shipping costs, in target currency (ex. USD).;"},taxes:{type:"number",format:"float",description:"The amount of taxes to be paid, in target currency (ex. USD)."},goods:{type:"number",format:"float",description:"The amount of goods to be paid, in target currency (ex. USD)."}},description:"Amounts for the order. Required only for `external payment` method."}},description:"Payment information for an order"}}},required:!0},responses:{400:{description:"400 - Bad request",content:{"application/json":{schema:{type:"object",properties:{errors:{type:"array",items:{type:"object",required:["status","detail","title"],properties:{status:{type:"number",format:"float",example:500},detail:{type:"string",nullable:!0,example:"Fatal issue"},title:{type:"string",example:"Unknown error"}},example:{status:400,detail:"",title:"Bad input request"}}}},description:"Provided input is invalid"}}}},401:{description:"401 - Unauthorized",content:{"application/json":{schema:{type:"object",properties:{errors:{type:"array",items:{type:"object",required:["status","detail","title"],properties:{status:{type:"number",format:"float",example:500},detail:{type:"string",nullable:!0,example:"Fatal issue"},title:{type:"string",example:"Unknown error"}},example:{status:401,detail:"",title:"Authentication information is missing or invalid"}}}},description:"Authentication information is missing or invalid"}}}},404:{description:"404 - Not found",content:{"application/json":{schema:{type:"object",properties:{errors:{type:"array",items:{type:"object",required:["status","detail","title"],properties:{status:{type:"number",format:"float",example:500},detail:{type:"string",nullable:!0,example:"Fatal issue"},title:{type:"string",example:"Unknown error"}},example:{status:404,detail:"",title:"Not Found"}}}},description:"Not Found"}}}},"5XX":{description:"500 - Unknown error",content:{"application/json":{schema:{type:"object",properties:{errors:{type:"array",items:{type:"object",required:["status","detail","title"],properties:{status:{type:"number",format:"float",example:500},detail:{type:"string",nullable:!0,example:"Fatal issue"},title:{type:"string",example:"Unknown error"}},example:{status:500,detail:"",title:"Unknown error"}}}},description:"Unknown error"}}}}},description:"Submits payment for a pending order to Bonsai for processing. Orders will be processed once payment is confirmed",method:"post",path:"/v2/{id}/payment",servers:[{url:"https://api.shopbonsai.ca/orders"}],security:[{APIKeyHeader:[]}],securitySchemes:{APIKeyHeader:{type:"apiKey",name:"API-Key",in:"header"},AuthorizationHeader:{type:"apiKey",name:"Authorization",in:"header"}},jsonRequestBodyExample:{method:"credit card",token:"tok_us",currency:"USD",amounts:{shipping:0,taxes:0,goods:0}},info:{title:"Orders API",description:"\n  APIs used for interacting with orders.\n\n  There are a few types of integration with the Bonsai Order API depending on who owns the payments.\n\n  ## Bonsai owns the payment\n\n  ### Native Checkout experience\n\n  If during the checkout process, the customer is redirected to Bonsai's checkout page to complete payment and order processing.\n\n  ### API integrated checkout experience\n\n  If you are hosting your own checkout experience and leveraging our endpoints to collect payment and complete order processing.\n  Please contact our team to provide you with all you need to get started.\n\n  ## Account owns the payment\n\n  If you are owning payment. Orders will need to be submitted with the payment method `external payment`.\n  Once the order is submitted, our team will handle fulfillment and Bonsai will invoice you for the order amount based on our agreement.\n  ",version:"7.9.1",contact:{email:"developers@shopbonsai.ca"}},postman:{name:"Submit Order Payment",description:{content:"Submits payment for a pending order to Bonsai for processing. Orders will be processed once payment is confirmed",type:"text/plain"},url:{path:["v2",":id","payment"],host:["{{baseUrl}}"],query:[],variable:[{disabled:!1,description:{content:"(Required) Public ID of the order.",type:"text/plain"},type:"any",value:"",key:"id"}]},header:[{key:"Content-Type",value:"application/json"},{key:"Accept",value:"application/json"}],method:"POST",body:{mode:"raw",raw:'""',options:{raw:{language:"json"}}}}},sidebar_class_name:"post api-method",info_path:"docs/api/orders/orders-api"},sidebar:"bonsai",previous:{title:"Submit Pending Orders",permalink:"/docs/api/orders/submit-pending-orders"},next:{title:"Fulfillment Statuses",permalink:"/docs/api/orders/order-fulfillment-statuses"}},h={},f=[{value:"Submit Order Payment",id:"submit-order-payment",level:2}],b={toc:f};function g(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,r.Z)({},b,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"submit-order-payment"},"Submit Order Payment"),(0,i.kt)("p",null,"Submits payment for a pending order to Bonsai for processing. Orders will be processed once payment is confirmed"),(0,i.kt)("details",{style:{marginBottom:"1rem"},"data-collapsed":!1,open:!0},(0,i.kt)("summary",{style:{}},(0,i.kt)("strong",null,"Path Parameters")),(0,i.kt)("div",null,(0,i.kt)("ul",null,(0,i.kt)(s.Z,{className:"paramsItem",param:{in:"path",name:"id",required:!0,description:"Public ID of the order.",example:"cldbvy7gt0006hpzo9nyw72ks",schema:{type:"string"}},mdxType:"ParamsItem"})))),(0,i.kt)(o.Z,{mdxType:"MimeTabs"},(0,i.kt)(d.Z,{label:"application/json",value:"application/json-schema",mdxType:"TabItem"},(0,i.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,i.kt)("summary",{style:{textAlign:"left"}},(0,i.kt)("strong",null,"Request Body"),(0,i.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," required")),(0,i.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.kt)("ul",{style:{marginLeft:"1rem"}},(0,i.kt)(m.Z,{collapsible:!1,name:"method",required:!0,schemaDescription:"Payment method used to pay for the order.",schemaName:"string",qualifierMessage:"**Possible values:** [`credit card`, `external payment`, `stripe`]",defaultValue:void 0,mdxType:"SchemaItem"}),(0,i.kt)(m.Z,{collapsible:!1,name:"token",required:!0,schemaDescription:"Payment token for the order. Each payment token may be used for 1 order.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,i.kt)(m.Z,{collapsible:!1,name:"currency",required:!1,schemaDescription:"ISO currency code for the currency that customer payment was taken in.",schemaName:"string",qualifierMessage:"**Possible values:** [`CAD`, `USD`, `GBP`, `AUD`, `EUR`]",defaultValue:void 0,mdxType:"SchemaItem"}),(0,i.kt)(m.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.kt)("details",{style:{}},(0,i.kt)("summary",{style:{}},(0,i.kt)("strong",null,"amounts"),(0,i.kt)("span",{style:{opacity:"0.6"}}," object")),(0,i.kt)("div",{style:{marginLeft:"1rem"}},(0,i.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,i.kt)("p",null,"Amounts for the order. Required only for ",(0,i.kt)("inlineCode",{parentName:"p"},"external payment")," method.")),(0,i.kt)(m.Z,{collapsible:!1,name:"shipping",required:!0,schemaDescription:"Total amount of shipping costs, in target currency (ex. USD).;",schemaName:"float",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,i.kt)(m.Z,{collapsible:!1,name:"taxes",required:!0,schemaDescription:"The amount of taxes to be paid, in target currency (ex. USD).",schemaName:"float",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,i.kt)(m.Z,{collapsible:!1,name:"goods",required:!0,schemaDescription:"The amount of goods to be paid, in target currency (ex. USD).",schemaName:"float",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"})))))))),(0,i.kt)("div",null,(0,i.kt)(n.Z,{mdxType:"ApiTabs"},(0,i.kt)(d.Z,{label:"400",value:"400",mdxType:"TabItem"},(0,i.kt)("div",null,(0,i.kt)("p",null,"400 - Bad request")),(0,i.kt)("div",null,(0,i.kt)(o.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,i.kt)(d.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,i.kt)(p.Z,{mdxType:"SchemaTabs"},(0,i.kt)(d.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,i.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,i.kt)("summary",{style:{textAlign:"left"}},(0,i.kt)("strong",null,"Schema")),(0,i.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.kt)("ul",{style:{marginLeft:"1rem"}},(0,i.kt)(m.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.kt)("details",{style:{}},(0,i.kt)("summary",{style:{}},(0,i.kt)("strong",null,"errors"),(0,i.kt)("span",{style:{opacity:"0.6"}}," object[]")),(0,i.kt)("div",{style:{marginLeft:"1rem"}},(0,i.kt)(m.Z,{collapsible:!1,name:"status",required:!1,schemaDescription:void 0,schemaName:"float",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,i.kt)(m.Z,{collapsible:!1,name:"detail",required:!1,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,i.kt)(m.Z,{collapsible:!1,name:"title",required:!1,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}))))))),(0,i.kt)(d.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,i.kt)(l.Z,{responseExample:'{\n  "errors": [\n    {\n      "status": 400,\n      "detail": "",\n      "title": "Bad input request"\n    }\n  ]\n}',language:"json",mdxType:"ResponseSamples"}))))))),(0,i.kt)(d.Z,{label:"401",value:"401",mdxType:"TabItem"},(0,i.kt)("div",null,(0,i.kt)("p",null,"401 - Unauthorized")),(0,i.kt)("div",null,(0,i.kt)(o.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,i.kt)(d.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,i.kt)(p.Z,{mdxType:"SchemaTabs"},(0,i.kt)(d.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,i.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,i.kt)("summary",{style:{textAlign:"left"}},(0,i.kt)("strong",null,"Schema")),(0,i.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.kt)("ul",{style:{marginLeft:"1rem"}},(0,i.kt)(m.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.kt)("details",{style:{}},(0,i.kt)("summary",{style:{}},(0,i.kt)("strong",null,"errors"),(0,i.kt)("span",{style:{opacity:"0.6"}}," object[]")),(0,i.kt)("div",{style:{marginLeft:"1rem"}},(0,i.kt)(m.Z,{collapsible:!1,name:"status",required:!1,schemaDescription:void 0,schemaName:"float",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,i.kt)(m.Z,{collapsible:!1,name:"detail",required:!1,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,i.kt)(m.Z,{collapsible:!1,name:"title",required:!1,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}))))))),(0,i.kt)(d.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,i.kt)(l.Z,{responseExample:'{\n  "errors": [\n    {\n      "status": 401,\n      "detail": "",\n      "title": "Authentication information is missing or invalid"\n    }\n  ]\n}',language:"json",mdxType:"ResponseSamples"}))))))),(0,i.kt)(d.Z,{label:"404",value:"404",mdxType:"TabItem"},(0,i.kt)("div",null,(0,i.kt)("p",null,"404 - Not found")),(0,i.kt)("div",null,(0,i.kt)(o.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,i.kt)(d.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,i.kt)(p.Z,{mdxType:"SchemaTabs"},(0,i.kt)(d.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,i.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,i.kt)("summary",{style:{textAlign:"left"}},(0,i.kt)("strong",null,"Schema")),(0,i.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.kt)("ul",{style:{marginLeft:"1rem"}},(0,i.kt)(m.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.kt)("details",{style:{}},(0,i.kt)("summary",{style:{}},(0,i.kt)("strong",null,"errors"),(0,i.kt)("span",{style:{opacity:"0.6"}}," object[]")),(0,i.kt)("div",{style:{marginLeft:"1rem"}},(0,i.kt)(m.Z,{collapsible:!1,name:"status",required:!1,schemaDescription:void 0,schemaName:"float",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,i.kt)(m.Z,{collapsible:!1,name:"detail",required:!1,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,i.kt)(m.Z,{collapsible:!1,name:"title",required:!1,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}))))))),(0,i.kt)(d.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,i.kt)(l.Z,{responseExample:'{\n  "errors": [\n    {\n      "status": 404,\n      "detail": "",\n      "title": "Not Found"\n    }\n  ]\n}',language:"json",mdxType:"ResponseSamples"}))))))),(0,i.kt)(d.Z,{label:"5XX",value:"5XX",mdxType:"TabItem"},(0,i.kt)("div",null,(0,i.kt)("p",null,"500 - Unknown error")),(0,i.kt)("div",null,(0,i.kt)(o.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,i.kt)(d.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,i.kt)(p.Z,{mdxType:"SchemaTabs"},(0,i.kt)(d.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,i.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,i.kt)("summary",{style:{textAlign:"left"}},(0,i.kt)("strong",null,"Schema")),(0,i.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.kt)("ul",{style:{marginLeft:"1rem"}},(0,i.kt)(m.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.kt)("details",{style:{}},(0,i.kt)("summary",{style:{}},(0,i.kt)("strong",null,"errors"),(0,i.kt)("span",{style:{opacity:"0.6"}}," object[]")),(0,i.kt)("div",{style:{marginLeft:"1rem"}},(0,i.kt)(m.Z,{collapsible:!1,name:"status",required:!1,schemaDescription:void 0,schemaName:"float",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,i.kt)(m.Z,{collapsible:!1,name:"detail",required:!1,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,i.kt)(m.Z,{collapsible:!1,name:"title",required:!1,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}))))))),(0,i.kt)(d.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,i.kt)(l.Z,{responseExample:'{\n  "errors": [\n    {\n      "status": 500,\n      "detail": "",\n      "title": "Unknown error"\n    }\n  ]\n}',language:"json",mdxType:"ResponseSamples"}))))))))))}g.isMDXComponent=!0}}]);